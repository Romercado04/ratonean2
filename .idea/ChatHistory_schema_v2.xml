<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChatHistoryState">
    <option name="serializedSessions">
      <map>
        <entry key="130f084c-468d-42aa-a8ef-aabaad9646b4" value="{&quot;id&quot;:&quot;130f084c-468d-42aa-a8ef-aabaad9646b4&quot;,&quot;name&quot;:&quot;DeprecaciÃ³n del login con Google en LoginScreen&quot;,&quot;timestamp&quot;:1755116330088,&quot;messages&quot;:[{&quot;role&quot;:&quot;user&quot;,&quot;content&quot;:[{&quot;type&quot;:&quot;text&quot;,&quot;text&quot;:&quot;\n\u003cadditional_data\u003e\nBelow are some potentially helpful/relevant pieces of information for figuring out to respond\n\u003ccurrent_file\u003e\n```kotlin:app/src/main/java/com/example/ratonean2_app/auth/presentation/screen/LoginScreen.kt, lines\u003dALL(1-71)\npackage com.example.ratonean2_app.auth.presentation.screen\n\nimport android.app.Activity\nimport android.util.Log\nimport androidx.activity.compose.rememberLauncherForActivityResult\nimport androidx.activity.result.contract.ActivityResultContracts\nimport androidx.compose.foundation.layout.Arrangement\nimport androidx.compose.foundation.layout.Column\nimport androidx.compose.foundation.layout.Spacer\nimport androidx.compose.foundation.layout.fillMaxSize\nimport androidx.compose.foundation.layout.height\nimport androidx.compose.material3.Button\nimport androidx.compose.material3.Text\nimport androidx.compose.runtime.Composable\nimport androidx.compose.runtime.collectAsState\nimport androidx.compose.runtime.getValue\nimport androidx.compose.runtime.remember\nimport androidx.compose.ui.Modifier\nimport androidx.compose.ui.platform.LocalContext\nimport androidx.compose.ui.unit.dp\nimport com.example.ratonean2_app.auth.presentation.viemwodel.LoginViewModel\nimport com.google.android.gms.auth.api.signin.GoogleSignIn\nimport com.google.android.gms.auth.api.signin.GoogleSignInOptions\nimport com.google.android.gms.common.api.ApiException\nimport org.koin.androidx.compose.koinViewModel\n\n@Composable\nfun LoginScreen() {\n    val viewModel \u003d koinViewModel\u003cLoginViewModel\u003e()\n    val context \u003d LocalContext.current\n    val state by viewModel.state.collectAsState()\n\n    val launcher \u003d rememberLauncherForActivityResult(\n        contract \u003d ActivityResultContracts.StartActivityForResult()\n    ) { result -\u003e\n        if (result.resultCode \u003d\u003d Activity.RESULT_OK) {\n            val task \u003d GoogleSignIn.getSignedInAccountFromIntent(result.data)\n            try {\n                val account \u003d task.getResult(ApiException::class.java)\n                val idToken \u003d account.idToken\n                Log.d(\&quot;GoogleSignIn1\&quot;, \&quot;idToken \u003d $idToken\&quot;)\n                if (idToken !\u003d null) {\n                    Log.d(\&quot;GoogleSignIn2\&quot;, \&quot;idToken \u003d $idToken\&quot;)\n                    viewModel.loginWithGoogle(idToken)\n                }\n            } catch (e: ApiException) {\n                Log.e(\&quot;GoogleSignInCatch\&quot;, \&quot;Sign-in failed: ${e.statusCode}\&quot;)\n            }\n        }\n    }\n\n    val signInRequest \u003d remember {\n        GoogleSignInOptions.Builder(GoogleSignInOptions.DEFAULT_SIGN_IN)\n            .requestIdToken(\&quot;368774461247-9v49te82pb20ndpli048fccambrleu8n.apps.googleusercontent.com\&quot;)\n            .requestEmail()\n            .build()\n    }\n    val client \u003d remember { GoogleSignIn.getClient(context, signInRequest) }\n\n    Column(Modifier.fillMaxSize(), verticalArrangement \u003d Arrangement.Center) {\n        Button(onClick \u003d {\n            launcher.launch(client.signInIntent)\n        }) {\n            Text(\&quot;Login con Google\&quot;)\n        }\n\n        Spacer(modifier \u003d Modifier.height(16.dp))\n\n        Text(state)\n    }\n}\n```\n\u003c/current_file\u003e\n\u003c/additional_data\u003e\n\u003cuser_query\u003e\nlogin con google, pero este esta deprecado\n\u003c/user_query\u003e&quot;}]}]}" />
      </map>
    </option>
  </component>
</project>